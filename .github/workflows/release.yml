name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore src/AwsServiceAuthenticator.sln

      - name: Build
        run: dotnet build --configuration Release src/AwsServiceAuthenticator.sln

      - name: Publish
        run: dotnet publish --configuration Release --output ./publish src/AwsServiceAuthenticator.sln

      - name: Archive release files
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ matrix.os }}
          path: ./publish

  create_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts (Linux)
        uses: actions/download-artifact@v3
        with:
          name: release-ubuntu-latest
          path: ./publish/ubuntu

      - name: Download build artifacts (Windows)
        uses: actions/download-artifact@v3
        with:
          name: release-windows-latest
          path: ./publish/windows

      - name: Download build artifacts (macOS)
        uses: actions/download-artifact@v3
        with:
          name: release-macos-latest
          path: ./publish/macos

      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release assets (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/ubuntu
          asset_name: linux-release.tar.gz
          asset_content_type: application/gzip

      - name: Upload release assets (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/windows
          asset_name: windows-release.zip
          asset_content_type: application/zip

      - name: Upload release assets (macOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/macos
          asset_name: macos-release.tar.gz
          asset_content_type: application/gzip
